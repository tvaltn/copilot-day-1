@page
@{
    ViewData["Title"] = "Car List";
}

<h1>Car List</h1>

<table class="table">
    <thead>
        <tr>
            <th>Make</th>
            <th>Model</th>
            <th>Year</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody id="carTableBody">
        <!-- Car rows will be populated here by JavaScript -->
    </tbody>
</table>

<h2>Add New Car</h2>
<form id="carForm" onsubmit="return addOrUpdateCar(event)">
    <input type="hidden" id="carId" name="carId" />
    <div class="form-group">
        <label for="make">Make</label>
        <input type="text" class="form-control" id="make" name="make" required />
    </div>
    <div class="form-group">
        <label for="model">Model</label>
        <input type="text" class="form-control" id="model" name="model" required />
    </div>
    <div class="form-group">
        <label for="year">Year</label>
        <input type="number" class="form-control" id="year" name="year" required />
    </div>
    <button type="submit" class="btn btn-primary">Save Car</button>
</form>

@section Scripts {
    <script>
        async function fetchCars() {
            try {
                const response = await fetch('https://localhost:7007/cars');
                if (response.ok) {
                    const cars = await response.json();
                    const tbody = document.getElementById('carTableBody');
                    tbody.innerHTML = '';
                    cars.forEach(car => {
                        const row = document.createElement('tr');
                        row.innerHTML = `
                                    <td>${car.make}</td>
                                    <td>${car.model}</td>
                                    <td>${car.year}</td>
                                    <td>
                                        <button class="btn btn-warning" onclick="editCar(${car.id}, '${car.make}', '${car.model}', ${car.year})">Edit</button>
                                        <button class="btn btn-danger" onclick="deleteCar(${car.id})">Delete</button>
                                    </td>
                                `;
                        tbody.appendChild(row);
                    });
                } else {
                    alert('Failed to fetch cars');
                }
            } catch (error) {
                console.error('Error fetching cars:', error);
                alert('An error occurred while fetching cars');
            }
        }

        async function addOrUpdateCar(event) {
            event.preventDefault();
            const carId = document.getElementById('carId').value;
            const make = document.getElementById('make').value;
            const model = document.getElementById('model').value;
            const year = document.getElementById('year').value;

            const car = { make, model, year: parseInt(year) };
            const url = carId ? `https://localhost:7007/cars/${carId}` : 'https://localhost:7007/cars';
            const method = carId ? 'PUT' : 'POST';

            try {
                const response = await fetch(url, {
                    method: method,
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(car)
                });
                if (response.ok) {
                    document.getElementById('carForm').reset();
                    document.getElementById('carId').value = ''; // Clear the hidden carId field
                    fetchCars();
                } else {
                    alert('Failed to save car');
                }
            } catch (error) {
                console.error('Error saving car:', error);
                alert('An error occurred while saving the car');
            }
        }

        async function deleteCar(id) {
            try {
                const response = await fetch(`https://localhost:7007/cars/${id}`, {
                    method: 'DELETE'
                });
                if (response.ok) {
                    fetchCars();
                } else {
                    alert('Failed to delete car');
                }
            } catch (error) {
                console.error('Error deleting car:', error);
                alert('An error occurred while deleting the car');
            }
        }

        function editCar(id, make, model, year) {
            document.getElementById('carId').value = id;
            document.getElementById('make').value = make;
            document.getElementById('model').value = model;
            document.getElementById('year').value = year;
        }

        document.addEventListener('DOMContentLoaded', fetchCars);
    </script>
}


